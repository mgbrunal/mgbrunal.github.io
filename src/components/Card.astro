---
import ArrowUpRight from "../assets/icons/ArrowUpRight.astro";

interface Props {
  clickable?: boolean;
  cols?: 1 | 2 | 4;
  external?: boolean;
  href?: string;
  rows?: 1 | 2 | 4;
}

const {
  clickable = false,
  cols = 1,
  external = false,
  href = "#",
  rows = 1,
} = Astro.props;

const getCols = (cols?: 1 | 2 | 4): string => {
  switch (cols) {
    case 1:
      return "col-span-1";
    case 2:
      return "col-span-2";
    case 4:
      return "col-span-2 md:col-span-4";
    default:
      return "col-span-1";
  }
};

const getRows = (rows?: 1 | 2 | 4): string => {
  switch (rows) {
    case 1:
      return "row-span-1";
    case 2:
      return "row-span-2";
    case 4:
      return "row-span-4";
    default:
      return "row-span-1";
  }
};
---

{
  clickable ? (
    <div
      class={`${getRows(rows)} ${getCols(cols)} rounded-lg bg-black/50 transition-all duration-500 hover:bg-black hover:shadow-2xl p-4`}
    >
      <a
        class="flex h-full w-full"
        href={href}
        {...(external && { target: "_blank" })}
      >
        <div class="relative h-full w-full flex flex-col items-center justify-center text-white/50">
          <button>
            <div class="absolute top-0 right-0">
              <ArrowUpRight />
            </div>
            <slot />
          </button>
        </div>
      </a>
    </div>
  ) : (
    <div
      class={`${getRows(rows)} ${getCols(cols)} rounded-lg bg-black/50 transition-all duration-500 hover:bg-black hover:shadow-2xl p-4`}
    >
      <div class="relative h-full w-full transition-all duration-300 flex flex-col items-start justify-center text-white/50">
        <slot />
      </div>
    </div>
  )
}
